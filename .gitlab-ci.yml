---
variables:
  GITLAB_ENV: test
  SERVICE: ${SERVICE}

default:
  tags:
    - shell

stages:
  - test
  - deploy
  - update
  - e2e-test

include:
  - project: fairdata/fairdata-ci
    ref: master
    file:
      - /templates/deploy/deploy-jobs.yaml
      - /templates/test/test-jobs.yaml

# ------------------------

etsin-qvain-tests:
  stage: test
  tags:
    - docker
  image:
    name: python:3.8
  interruptible: true
  variables:
    TZ: Europe/Helsinki
  before_script:
    - echo -e "\e[0Ksection_start:`date +%s`:dependency_section[collapsed=true]\r\e[0KInstalling dependencies"
    # ------------------------
    - apt-get update && apt-get install -y libxmlsec1 libxmlsec1-dev npm
    - curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && apt-get install -y nodejs
    - /usr/local/bin/python -m pip install --upgrade pip
    - pip install -r requirements.txt
    - pip install -r test_requirements.txt
    # ------------------------
    - echo -e "\e[0Ksection_end:`date +%s`:dependency_section\r\e[0K"
    - npm --version
    - node --version
    - /usr/local/bin/python --version
    - /usr/local/bin/python -m pip --version
  script:
    - tox -e cicd
    - cd etsin_finder/frontend
    - npm install
    - npm run lint
    - npm run test
  rules:
    - if: $CI_PIPELINE_SOURCE =~ /^(web)$/
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

sonarqube:
  stage: test
  extends: .sonarqube-job
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

# ------------------------

deploy:
  extends: .deploy-job
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(master)$/
    - if: $CI_PIPELINE_SOURCE =~ /^(web)$/

deploy-feature:
  extends: .deploy-feature-job
  stage: deploy
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

# ------------------------

update-proxy:
  stage: update
  environment: $GITLAB_ENV
  script:
    - ansible-playbook -i $ANSIBLE_INVENTORY $UPDATE_PROXY_PLAYBOOK --vault-id $ANSIBLE_VAULT_FILE
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(master)$/
    - if: $CI_PIPELINE_SOURCE =~ /^(web)$/

update-proxy-feature:
  stage: update
  environment: staging
  script:
    - ansible-playbook -i $ANSIBLE_INVENTORY $UPDATE_PROXY_PLAYBOOK --vault-id $ANSIBLE_VAULT_FILE
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

# ------------------------

fairdata-e2e:
  stage: e2e-test
  trigger: fairdata/fairdata-ci
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(master)$/
    - if: $CI_PIPELINE_SOURCE =~ /^(web)$/

fairdata-e2e-feature:
  stage: e2e-test
  trigger: fairdata/fairdata-ci
  variables:
    GITLAB_ENV: staging
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
