
variables:
  GITLAB_ENV: test

default:
  tags:
    - shell

# ~~~~~~~~~~~~~~~~~~~~~~~~

stages:
  - clean-previous-build
  - deploy
  - test
  - clean
  - update

# ~~~~~~~~~~~~~~~~~~~~~~~~

clean-previous-build:
  stage: clean-previous-build
  environment: $GITLAB_ENV
  script:
    - ansible-playbook -i $ANSIBLE_INVENTORY $DELETE_PLAYBOOK --vault-id $ANSIBLE_VAULT_FILE
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(master)$/

# ~~~~~~~~~~~~~~~~~~~~~~~~

include:
  - project: fairdata/fairdata-ci
    ref: master
    file:
      - /templates/deploy.yml
    rules:
    - if: $CI_COMMIT_BRANCH =~ /^(master)$/
    - if: $CI_PIPELINE_SOURCE =~ /^(web)$/

# ~~~~~~~~~~~~~~~~~~~~~~~~

sonarqube:
  tags:
    - docker
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      allow_failure: true
    - if: $CI_COMMIT_BRANCH =~ /^(master)$/ && $CI_PIPELINE_SOURCE !~ /^(web)$/
      allow_failure: true
    - if: $CI_COMMIT_BRANCH =~ /^(release)$/

etsin-qvain-tests:
  stage: test
  script:
      - python3.8 -m virtualenv venv
      - source venv/bin/activate
      - pip install -r requirements.txt
      - pip install -r test_requirements.txt
      - tox -e cicd
      - cd etsin_finder/frontend
      - npm install
      - npm run lint
      - npm run test
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH =~ /^(master)$/ && $CI_PIPELINE_SOURCE !~ /^(web)$/

# ~~~~~~~~~~~~~~~~~~~~~~~~

clean-feature-code:
  stage: clean
  environment:
    name: $GITLAB_ENV
    on_stop: clean-gitlab-env
  script:
    - ansible-playbook -i $ANSIBLE_INVENTORY $DELETE_PLAYBOOK -e "repo_version=$CI_COMMIT_REF_NAME" --vault-id $ANSIBLE_VAULT_FILE
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME !~ /^(master|release)$/

clean-gitlab-env:
  stage: clean
  environment:
    name: $GITLAB_ENV
    action: stop
  variables:
    GIT_STRATEGY: none
  script:
    - echo 'Cleaning...'
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME !~ /^(master|release)$/

# ~~~~~~~~~~~~~~~~~~~~~~~~

update-proxy:
  stage: update
  environment: $GITLAB_ENV
  script:
    - ansible-playbook -i $ANSIBLE_INVENTORY $UPDATE_PROXY_PLAYBOOK --vault-id $ANSIBLE_VAULT_FILE
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(master)$/
