// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Qvain dataset list PreservationStates should render <TablePasState /> 1`] = `
<Fragment>
  <Translate
    color="primary"
    component={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": e {
          "baseHash": -291192186,
          "baseStyle": e {
            "baseHash": 1387173706,
            "baseStyle": undefined,
            "componentId": "label__Label-sc-x0jqqw-0",
            "isStatic": false,
            "rules": Array [
              "
  padding: 0.3em 0.6em 0.4em;
  border-radius: 0.2em;
  background: ",
              [Function],
              ";
  color: white;
  display: inline-block;
  margin: ",
              [Function],
              ";
",
            ],
            "staticRulesId": "",
          },
          "componentId": "tablePasState__PasLabel-sc-kh2b5p-0",
          "isStatic": false,
          "rules": Array [
            "
  margin-left: 10px;
  text-transform: uppercase;
",
          ],
          "staticRulesId": "",
        },
        "displayName": "tablePasState__PasLabel",
        "foldedComponentIds": Array [
          "label__Label-sc-x0jqqw-0",
        ],
        "render": [Function],
        "shouldForwardProp": undefined,
        "styledComponentId": "tablePasState__PasLabel-sc-kh2b5p-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    content="qvain.files.dataCatalog.pas"
  />
  <Translate
    component={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": e {
          "baseHash": 682788508,
          "baseStyle": undefined,
          "componentId": "tablePasState__PasText-sc-kh2b5p-1",
          "isStatic": false,
          "rules": Array [
            "
  margin-left: 10px;
  font-size: 0.8em;
  :before {
    content: '(';
  }
  :after {
    content: ')';
  }
",
          ],
          "staticRulesId": "",
        },
        "displayName": "tablePasState__PasText",
        "foldedComponentIds": Array [],
        "render": [Function],
        "shouldForwardProp": undefined,
        "styledComponentId": "tablePasState__PasText-sc-kh2b5p-1",
        "target": "span",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    content="qvain.pasState.0"
  />
</Fragment>
`;

exports[`Qvain should render correctly 1`] = `
<card__QvainContainer>
  <Header
    datasetError={false}
    datasetLoading={false}
  />
  <StickyHeader
    datasetError={false}
    datasetLoading={true}
    hideSubmitButtons={false}
    submitButtonsRef={
      Object {
        "current": null,
      }
    }
  />
  <ErrorBoundary
    ContainerComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [
          Object {
            "className": "error",
          },
        ],
        "componentStyle": e {
          "baseHash": 1359012054,
          "baseStyle": undefined,
          "componentId": "errorBoundary__ErrorContainer-sc-kebdqo-0",
          "isStatic": false,
          "rules": Array [
            "
  && {
    padding-left: 2rem;
    padding-right: 2rem;
  }
",
          ],
          "staticRulesId": "",
        },
        "displayName": "errorBoundary__ErrorContainer",
        "foldedComponentIds": Array [],
        "render": [Function],
        "shouldForwardProp": undefined,
        "styledComponentId": "errorBoundary__ErrorContainer-sc-kebdqo-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    callback={[Function]}
    title={
      <Translate
        component="h2"
        content="qvain.error.render"
      />
    }
  >
    <Dataset
      datasetError={false}
      datasetErrorDetails={null}
      datasetErrorTitle={null}
      handleRetry={[Function]}
      haveDataset={true}
      setFocusOnSubmitButton={[Function]}
    />
  </ErrorBoundary>
  <LooseActorsDialog />
  <LooseProvenanceDialog />
  <Translate
    attributes={
      Object {
        "message": "qvain.unsavedChanges",
      }
    }
    component={[Function]}
    when={false}
  />
</card__QvainContainer>
`;
